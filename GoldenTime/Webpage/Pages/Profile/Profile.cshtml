@page
@model Webpage.Pages.Profile.ProfileModel
@{
    ViewData["Title"] = "Profile";
}

@functions {
    public void ShowTree(List<POCO.Category> categories)
    {
        @foreach (var category in categories)
        {
            <div class="category-item">
                <input class="category-checkbox" type="checkbox" id="@category.Idx" name="@category.Name" />
                <label class="category-label" for="@category.Idx">@category.Name</label>
            </div>
        }
    }
}

<head>
    <link rel="stylesheet" href="~/css/profile.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />
</head>

<a asp-page="/Profile/SecondProfile" class="edit-btn">
    <i class="fa-solid fa-pencil"></i>
</a>

@foreach (var item in Model.Users)
{
    <h1>Welcome, @Html.DisplayFor(modelItem => item.FullName)!</h1>

    <p><span class="bold-text">Age:</span> @Html.DisplayFor(modelItem => item.Age)</p>
    <p><span class="bold-text">Mobile Number:</span>   @Html.DisplayFor(modelItem => item.Mobile)</p>
    <p><span class="bold-text">Email:</span>   @Html.DisplayFor(modelItem => item.Email)</p>
}

<h2>My Categories</h2>

 <form id="updateCategories" method="post" enctype="multipart/form-data">
    <div class="category-items">
        @if (!Model.MyCategories.Any()) 
        {
            @:No categories fetched.
        }
        @foreach (var category in Model.MyCategories)
        {
            @if (category.Children.Any())
            {
                ShowTree(category.Children);
            }
        }
    </div>
    
    <button type="submit" asp-page-handler="UpdateCategories" class="animated-btn">
        <span>Update categories</span>
    </button>
</form>

@foreach (var item in Model.Users)
{
    <h2>@Html.DisplayFor(modelItem => item.FullName)'s Posts</h2>
}
<div class="messages-container">
    @foreach (var post in Model.Posts)
    {
         <div class="post-container">
            @if (post.Attachments.Any())
            {
                <img class="post-img" src="data:image/png;base64,@post.Attachments[0].WebContent" alt="@post.Filename" />

                @if (post.Categories.Any() == false)
                {
                    <br />
                }
            }
            
            <h3>@post.Subject</h3>
            <p>@post.Content</p>

            @if(post.StartingOn != null)
            {
                <i class="fa-regular fa-calendar"></i>
                <span>Starts: @post.StartingOn</span>
                <br />

                <span class="ending-date">Ends: @post.EndingOn</span>
                <br />
            }

            <i class="fa-solid fa-user"></i>
            <span>
                Posted by
                <span class="uploader-name">@post.FullName</span>
                • @post.CreatedOn
            </span>
        
            @if (post.Categories.Any())
            {
                <div class="categories-container">
                    @foreach (var postCategory in post.Categories)
                    {
                        <button class="category">@postCategory.Name</button>
                    }
                </div>
            }

            <div class="send-msg-btn-container">
                <a class="send-msg-btn" href="/MessagePages/AddMessages/?messageTitle=@post.Subject.Replace(' ','%') &&owner=@post.Email">
                    Send @post.FullName a message
                </a>
            </div>

            @if (post.CalculatedRate.HasValue)
            {
                @:<span class="post-rating">Post Matching Rating:</span> @post.CalculatedRateP%
            }
        </div>
    }
</div>


@foreach (var item in Model.Users)
{
    <h2>@Html.DisplayFor(modelItem => item.FullName)'s Messages</h2>
}

<div class="messages-container">
    @foreach (var item in Model.Messages)
    {
        <div class="message-container">
            <p class="message-content">@Html.DisplayFor(modelItem => item.Content)</p>
            <p class="receiver"><span class="bold-text">Sent to:</span> @Html.DisplayFor(modelItem => item.Receiver.FullName)</p>
            <p class="timestamp">@Html.DisplayFor(modelItem => item.CreatedOn)</p>
        </div>
    }
</div>
<br />